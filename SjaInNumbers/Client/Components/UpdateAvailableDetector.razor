@inject IJSRuntime JSRuntime

<div class="update-alert">
    <div class="update-alert-content">
        <p>A new version of the site is available.</p>
        <button class="update-alert-button btn-small btn-primary" @onclick="@(() => JSRuntime.InvokeVoidAsync("location.reload"))">Refresh</button>
    </div>
</div>

@code {
    private bool _newVersionAvailable = false;

    protected override async Task OnInitializedAsync()
    {
        await RegisterForUpdateAvailableNotification();
    }

    private async Task RegisterForUpdateAvailableNotification()
    {
        await JSRuntime.InvokeAsync<object>(
            identifier: "registerForUpdateAvailableNotification",
            DotNetObjectReference.Create(this),
            nameof(OnUpdateAvailable));
    }

    [JSInvokable(nameof(OnUpdateAvailable))]
    public Task OnUpdateAvailable()
    {
        _newVersionAvailable = true;

        StateHasChanged();

        return Task.CompletedTask;
    }
}
