/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as UpdateImport } from './routes/update'
import { Route as TrendsMenuImport } from './routes/trends-menu'
import { Route as HoursImport } from './routes/hours'
import { Route as AccessImport } from './routes/access'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as TrendsRegionImport } from './routes/trends.$region'

// Create/Update Routes

const UpdateRoute = UpdateImport.update({
  path: '/update',
  getParentRoute: () => rootRoute,
} as any)

const TrendsMenuRoute = TrendsMenuImport.update({
  path: '/trends-menu',
  getParentRoute: () => rootRoute,
} as any)

const HoursRoute = HoursImport.update({
  path: '/hours',
  getParentRoute: () => rootRoute,
} as any)

const AccessRoute = AccessImport.update({
  path: '/access',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TrendsRegionRoute = TrendsRegionImport.update({
  path: '/trends/$region',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/access': {
      id: '/access'
      path: '/access'
      fullPath: '/access'
      preLoaderRoute: typeof AccessImport
      parentRoute: typeof rootRoute
    }
    '/hours': {
      id: '/hours'
      path: '/hours'
      fullPath: '/hours'
      preLoaderRoute: typeof HoursImport
      parentRoute: typeof rootRoute
    }
    '/trends-menu': {
      id: '/trends-menu'
      path: '/trends-menu'
      fullPath: '/trends-menu'
      preLoaderRoute: typeof TrendsMenuImport
      parentRoute: typeof rootRoute
    }
    '/update': {
      id: '/update'
      path: '/update'
      fullPath: '/update'
      preLoaderRoute: typeof UpdateImport
      parentRoute: typeof rootRoute
    }
    '/trends/$region': {
      id: '/trends/$region'
      path: '/trends/$region'
      fullPath: '/trends/$region'
      preLoaderRoute: typeof TrendsRegionImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/access': typeof AccessRoute
  '/hours': typeof HoursRoute
  '/trends-menu': typeof TrendsMenuRoute
  '/update': typeof UpdateRoute
  '/trends/$region': typeof TrendsRegionRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/access': typeof AccessRoute
  '/hours': typeof HoursRoute
  '/trends-menu': typeof TrendsMenuRoute
  '/update': typeof UpdateRoute
  '/trends/$region': typeof TrendsRegionRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/access': typeof AccessRoute
  '/hours': typeof HoursRoute
  '/trends-menu': typeof TrendsMenuRoute
  '/update': typeof UpdateRoute
  '/trends/$region': typeof TrendsRegionRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/access'
    | '/hours'
    | '/trends-menu'
    | '/update'
    | '/trends/$region'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/access'
    | '/hours'
    | '/trends-menu'
    | '/update'
    | '/trends/$region'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/access'
    | '/hours'
    | '/trends-menu'
    | '/update'
    | '/trends/$region'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AccessRoute: typeof AccessRoute
  HoursRoute: typeof HoursRoute
  TrendsMenuRoute: typeof TrendsMenuRoute
  UpdateRoute: typeof UpdateRoute
  TrendsRegionRoute: typeof TrendsRegionRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AccessRoute: AccessRoute,
  HoursRoute: HoursRoute,
  TrendsMenuRoute: TrendsMenuRoute,
  UpdateRoute: UpdateRoute,
  TrendsRegionRoute: TrendsRegionRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/access",
        "/hours",
        "/trends-menu",
        "/update",
        "/trends/$region"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/access": {
      "filePath": "access.tsx"
    },
    "/hours": {
      "filePath": "hours.tsx"
    },
    "/trends-menu": {
      "filePath": "trends-menu.tsx"
    },
    "/update": {
      "filePath": "update.tsx"
    },
    "/trends/$region": {
      "filePath": "trends.$region.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
