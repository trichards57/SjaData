@page "/deployments/peaks"

@inject IDeploymentService DeploymentService

@attribute [Authorize(Policy = "Lead")]

<PageTitle>SJA In Numbers - Peak Deployments</PageTitle>

<GeneralErrorHandler>
    <h2>Peak Deployments</h2>
    <BackLink Url="/deployments" />

    <table>
        @foreach (var region in peaks.GroupBy(p => p.Region).Where(r => r.Key != Region.Undefined))
        {
            <thead>
                <tr>
                    <th class="section-title" colspan="4">
                        <span>
                            @LabelConverters.LabelToDisplay(region.Key)
                        </span>
                    </th>
                </tr>
                <tr class="sub-head">
                    <th class="district-col">District</th>
                    <th class="vehicle-col">Front-Line</th>
                    <th class="vehicle-col">AWD</th>
                    <th class="vehicle-col">4x4</th>
                </tr>
            </thead>

            <tbody>
                @foreach (var district in region.OrderBy(d => d.District))
                {
                    <tr>
                        <td class="district-label">@district.District</td>
                        <td>
                            <div class="peak-value">
                                @district.FrontLineAmbulances
                            </div>
                        </td>
                        <td>
                            <div class="peak-value">
                                @district.AllWheelDriveAmbulances
                            </div>
                        </td>
                        <td>
                            <div class="peak-value">
                                @district.OffRoadAmbulances
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        }
    </table>
</GeneralErrorHandler>

@code {
    private IList<Model.Deployments.PeakLoads> peaks = [];

    override protected async Task OnInitializedAsync()
    {
        peaks = await DeploymentService.GetPeakLoads().ToListAsync();
    }
}